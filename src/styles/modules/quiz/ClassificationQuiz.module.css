.container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  width: 100vw;
  padding: 0.75rem;
  overflow: hidden;
  background-color: var(--background);
  margin: 0 auto;
  transition: background-color var(--transition-speed) ease;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.75rem;
}

.title {
  font-size: 1.125rem;
  font-weight: bold;
  color: var(--text);
  transition: color var(--transition-speed) ease;
}

.headerButtons {
  display: flex;
  align-items: center;
}

.shuffleButton, .finishButton {
  margin-right: 0.5rem;
  transition: background-color var(--transition-speed) ease, transform 0.2s ease;
}

.shuffleButton:hover, .finishButton:hover {
  transform: translateY(-2px);
}

.score {
  font-size: 1.125rem;
  font-weight: bold;
  color: var(--text);
  transition: color var(--transition-speed) ease;
}

.quizCard {
  flex-grow: 1;
  overflow: hidden;
  background-color: var(--background);
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  transition: background-color var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
}

.quizCardContent {
  height: 100%;
  padding: 0.5rem;
  overflow: hidden;
}

.gridContainer {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(4, 1fr);
  gap: 0.5rem;
  height: 100%;
}

.itemContainer {
  grid-column: 2;
  grid-row: 2 / span 2;
  display: flex;
  align-items: center;
  justify-content: center;
}

.dragOverlay {
  background-color: #ffffff; /* ドラッグ中のオーバーレイを白に */
  padding: 1rem;
  border-radius: 0.25rem;
  border: 1px solid #e2e8f0;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  font-size: 1.5rem;
  font-weight: 600;
  color: #1f2937; /* テキスト色を濃いグレーに */
  transform: rotate(90deg);
}

.resultsContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
}

.buttonContainer {
  display: flex;
  flex-direction: column;
  gap: 6rem;
}

.rotatedButton {
  transform: rotate(90deg);
  width: 8rem;
  height: 3rem;
  background-color: var(--secondary);
  color: var(--background);
  border: 1px solid var(--border);
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease, border-color var(--transition-speed) ease;
}

.rotatedButton:hover {
  background-color: var(--accent);
}

.rotatedText {
  display: inline-block;
  font-size: 0.875rem;
  color: var(--text);
  transition: color var(--transition-speed) ease;
}

.finalScore {
  font-size: 1.5rem;
  font-weight: bold;
  transform: rotate(90deg);
  white-space: nowrap;
  color: var(--text);
  transition: color var(--transition-speed) ease;
}

.resultButton {
  /* 既存のrotatedButtonのスタイルを継承 */
  transform: rotate(90deg);
  width: 8rem;
  height: 3rem;
  background-color: var(--secondary);
  color: var(--background);
  border: 1px solid var(--border);
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease, border-color var(--transition-speed) ease;
}

.resultButton:hover {
  background-color: var(--accent);
}

.wideScreenButton {
  transform: none;
  width: auto;
  padding: 0.5rem 1rem;
}

.wideScreenButtonText {
  transform: none;
  font-size: 0.875rem;
  color: var(--text);
  transition: color var(--transition-speed) ease;
}

.wideScreenFinalScore {
  transform: none;
  margin-left: 1rem;
}

/* レスポンシブデザイン */
@media (max-width: 600px) {
  .container {
    max-width: 100%;
    padding: 0.5rem;
  }

  .title, .score {
    font-size: 1rem;
  }

  .gridContainer {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }

  .itemContainer {
    grid-column: 1 / span 3;
    grid-row: 2 / span 2;
  }

  .dragOverlay {
    font-size: 1.25rem;
    padding: 0.75rem;
  }

  .rotatedButton {
    transform: rotate(90deg);
    width: 8rem;
    height: 3rem;
    background-color: var(--secondary);
    color: var(--background);
    border: 1px solid var(--border);
    transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease, border-color var(--transition-speed) ease;
  }
  
  .rotatedText {
    display: inline-block;
    font-size: 0.875rem;
    color: var(--text);
    transition: color var(--transition-speed) ease;
  }

  .finalScore {
    font-size: 1.25rem;
  }
}

@media (min-width: 601px) {
  .container {
    height: 100vh;
    width: 100%;
    padding: 1rem;
  }

  .gridContainer {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 1rem;
  }

  .itemContainer {
    grid-column: 2 / span 2;
    grid-row: 2;
  }

  .dragOverlay {
    transform: none;
  }

  .buttonContainer {
    flex-direction: row;
    gap: 1rem;
  }

  .rotatedButton, .rotatedText, .finalScore {
    transform: none;
  }

  .wideScreenButton, .wideScreenButtonText, .wideScreenFinalScore {
    transform: none;
  }

  /* 分類フィールドのスタイルを修正 */
  .categoryContainer {
    transform: none;
  }

  .categoryContent {
    transform: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .categoryImage {
    transform: none;
    max-width: 100%;
    max-height: 60%;
  }

  .categoryName {
    transform: none;
    writing-mode: horizontal-tb;
    text-orientation: mixed;
    margin-top: 0.5rem;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .gridContainer {
    gap: 0.75rem;
  }

  .dragOverlay {
    font-size: 1.75rem;
    padding: 1.25rem;
  }
}

/* ダークモード対応 */
:global(.dark) .container {
  background-color: var(--background);
}

:global(.dark) .title,
:global(.dark) .score,
:global(.dark) .finalScore,
:global(.dark) .rotatedText,
:global(.dark) .wideScreenButtonText {
  color: var(--text);
}

:global(.dark) .quizCard {
  background-color: var(--background);
  box-shadow: 0 1px 3px 0 rgba(255, 255, 255, 0.1), 0 1px 2px 0 rgba(255, 255, 255, 0.06);
}

:global(.dark) .rotatedButton,
:global(.dark) .resultButton {
  background-color: var(--secondary);
  color: var(--background);
  border-color: var(--border);
}

:global(.dark) .rotatedButton:hover,
:global(.dark) .resultButton:hover {
  background-color: var(--accent);
}