.container {
  padding: 0.75rem;
  width: 100%;
  max-width: 390px;
  margin: 0 auto;
  background-color: var(--background);
  transition: background-color var(--transition-speed) ease;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.title {
  font-size: 1.125rem;
  font-weight: bold;
  color: var(--text);
  transition: color var(--transition-speed) ease;
}

.headerButtons {
  display: flex;
  gap: 0.5rem;
}

.buttonGroup {
  display: flex;
}

.shuffleButton {
  margin-right: 0.5rem;
}

.choiceGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.5rem;
}

.correctChoice {
  background-color: var(--accent);
  color: var(--background);
}

.footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.resultIcon {
  margin-right: 0.5rem;
}

.pagination {
  text-align: center;
  margin-top: 1rem;
  color: var(--secondary);
  transition: color var(--transition-speed) ease;
}

.loadingMessage,
.errorMessage,
.emptyMessage {
  text-align: center;
  padding: 1rem;
  color: var(--secondary);
  transition: color var(--transition-speed) ease;
}

.quizEndContainer {
  padding: 1rem;
  max-width: 28rem;
  margin: 0 auto;
  width: 100%;
}

.quizEndCard {
  margin-bottom: 1rem;
  background-color: var(--background);
  transition: background-color var(--transition-speed) ease;
}

.quizEndTitle {
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--text);
  transition: color var(--transition-speed) ease;
}

.finalScore {
  font-size: 1.25rem;
  margin-bottom: 1rem;
  color: var(--secondary);
  transition: color var(--transition-speed) ease;
}

.quizEndButtons {
  display: flex;
  justify-content: space-between;
}

.quizEndButtons button {
  padding: 0.75rem 1.5rem;
  background-color: var(--secondary);
  color: var(--background);
  border: none;
  border-radius: 0.25rem;
  font-size: 1rem;
  font-weight: 600;
  transition: all var(--transition-speed) ease;
}

.quizEndButtons button:hover {
  background-color: var(--accent);
  transform: translateY(-2px);
}

.questionCard {
  background-color: var(--background);
  margin-bottom: 1rem;
  border-radius: 0.5rem;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1), 0 6px 20px rgba(0,0,0,0.05);
  transition: background-color var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
}

.questionTitle {
  font-size: 1.125rem;
  color: var(--text);
  transition: color var(--transition-speed) ease;
}

.questionContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.questionText {
  text-align: center;
  margin-bottom: 1rem;
  color: var(--text);
  transition: color var(--transition-speed) ease;
}

.imageContainer {
  width: 100%;
  display: flex;
  justify-content: center;
  margin-bottom: 1rem;
}

.questionImage {
  max-width: 100%;
  max-height: 300px;
  object-fit: contain;
}

.choiceButton {
  justify-content: start;
  text-align: left;
  width: 100%;
  padding: 0.75rem;
  border: 2px solid var(--border);
  border-radius: 0.25rem;
  transition: all var(--transition-speed) ease;
  font-size: 0.875rem;
  position: relative;
  overflow: hidden;
  background-color: var(--background);
  color: var(--text);
}

.choiceButton:hover {
  background-color: var(--secondary);
  border-color: var(--accent);
}

.choiceButton[data-state="checked"] {
  background-color: var(--accent);
  border-color: var(--accent);
  color: var(--background);
}

.choiceButton[data-state="checked"]::after {
  content: '✓';
  position: absolute;
  right: 0.5rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--background);
  font-weight: bold;
}

.correctChoice {
  background-color: var(--accent) !important;
  border-color: var(--accent) !important;
  color: var(--background) !important;
}

.incorrectChoice {
  background-color: #ef4444 !important;
  border-color: #ef4444 !important;
  color: var(--background) !important;
}

.submitButton {
  width: 100%;
  margin-top: 1rem;
  background-color: var(--secondary);
  color: var(--background);
  font-weight: 600;
  padding: 0.5rem 1rem;
  border-radius: 0.25rem;
  transition: background-color var(--transition-speed) ease, transform 0.2s ease;
}

.submitButton:hover {
  background-color: var(--accent);
  transform: translateY(-2px);
}

.submitButton:disabled {
  background-color: var(--border);
  cursor: not-allowed;
}

.resultContainer {
  display: flex;
  align-items: center;
}

.correctIcon {
  color: #10b981;
}

.incorrectIcon {
  color: #ef4444;
}

.correctAnswer {
  font-size: 0.875rem;
  color: var(--secondary);
  transition: color var(--transition-speed) ease;
}

/* レスポンシブデザイン */
@media (max-width: 600px) {
  .container {
    padding: 0.5rem;
  }

  .choiceGrid {
    grid-template-columns: 1fr;
  }

  .title {
    font-size: 1rem;
  }

  .questionTitle {
    font-size: 1rem;
  }

  .questionImage {
    max-height: 200px;
  }
}

@media (min-width: 601px) and (max-width: 1023px) {
  .container {
    max-width: 90%;
    padding: 1.5rem;
  }

  .choiceGrid {
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }

  .title {
    font-size: 1.5rem;
  }

  .questionTitle {
    font-size: 1.25rem;
  }

  .questionImage {
    max-height: 300px;
  }

  .choiceButton {
    font-size: 0.9rem;
    padding: 0.75rem;
  }

  .submitButton {
    font-size: 0.9rem;
    padding: 0.6rem 1.2rem;
  }

  .correctAnswer {
    font-size: 0.9rem;
  }

  .pagination {
    font-size: 0.9rem;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 900px;
    padding: 2rem;
  }

  .choiceGrid {
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }

  .title {
    font-size: 2rem;
  }

  .questionTitle {
    font-size: 1.5rem;
  }

  .questionImage {
    max-height: 400px;
  }

  .choiceButton {
    font-size: 1rem;
    padding: 1rem;
  }

  .submitButton {
    font-size: 1rem;
    padding: 0.75rem 1.5rem;
  }

  .correctAnswer {
    font-size: 1rem;
  }

  .pagination {
    font-size: 1rem;
  }
}

/* アニメーション */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.fadeIn {
  animation: fadeIn 0.5s ease-out;
}

@keyframes slideIn {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

.slideIn {
  animation: slideIn 0.5s ease-out;
}